#include "MotorUtilities.nxc"
#include "SensorUtilities.nxc"
#define threshold 40
#define ultrathreshold 10

void lightArray(int sensorValue1, int sensorValue2)
{
		if (sensorValue2 < threshold && sensorValue1 >= threshold)
		{
			Coast(MOTOR_BC);
			MotorsForward(MOTOR_B, 25,0);
			Wait(5);
			Coast(MOTOR_BC);
			MotorsForward(MOTOR_BC, 50, 0);
		}
		if(sensorValue1 < threshold && sensorValue2 >= threshold)
		{
			Coast(MOTOR_BC);
			MotorsForward(MOTOR_C, 25, 0);
			Wait(5);
			Coast(MOTOR_BC);
			MotorsForward(MOTOR_BC, 50, 0);
		}
		if(sensorValue1 < threshold && sensorValue2 < threshold)
		{
			PlayTone(250, 1000);
			Wait(1000);
			StopAllTasks();
		}
}

task main()
{
	int sensorValue1;
	int sensorValue2;
	int ultraValue;
	ConfigSensor(S1, SENSOR_TYPE_LIGHT_ACTIVE, SENSOR_MODE_PERCENT, false);
	PlayToneEx(500, 500, 4, 0);
	Wait(500);
	ConfigSensor(S2, SENSOR_TYPE_LIGHT_ACTIVE, SENSOR_MODE_PERCENT, false);
	PlayToneEx(750, 500, 4, 0);
	Wait(500);
	ConfigSensor(S3, SENSOR_TYPE_LOWSPEED_9V, SENSOR_MODE_RAW, false);
	PlayToneEx(1000, 500, 4, 0);
	Wait(500);
	while(true){
		sensorValue1 = CheckSensor(S1);
		sensorValue2 = CheckSensor(S2);
		ultraValue = CheckSensor(S3);
		
		lightArray(sensorValue1, sensorValue2);
		MotorsForward(MOTOR_BC, 50, 0);
		if (ultraValue < 10)
		{
			Off(MOTOR_BC);
			MotorsReverse(MOTOR_BC, 25, 0);
			Wait( 500);
			Off(MOTOR_BC);
			MotorsForward(MOTOR_BC, 100, 0);
			StopAllTasks();
		}
	}
}
